'''
- 여행가 A는 N x N 크기의 정사각형 공간 위에 서 있습니다.
이 공간은 1 x 1  크기의 정사각형으로 나누어져 있습니다.
가장 왼쪽 위 좌표는 (1,1) 이며, 가장 오른쪾 아래 좌표는 (N, N)에 해당합니다. 여행가 A는
상, 하 ,좌, 우 방향으로 이동이 가능하며, 시작 좌표는 항상(1,1) 입니다. 우리 앞에는 여행가 A가 이동할
계획이 적힌 계획서가 놓여 있습니다.

- 계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L, R, U, D 중 하나의 문자가 반복적으로 적혀 있습니다.
각 문자의 의미는 다음과 같습니다.
- L : 왼쪽으로 한 칸 이동
- R : 오른쪽으로 한 칸 이동
- U : 위로 한 칸 이동
- D : 아래로 한 칸 이동

- 이때 여행가 A가 N x N 크기의 정사각형 공간을 벗어나는 움직임은 무시됩니다.
'''

def updownleftright():
    n = int(input())
    # 초기 위치
    x, y = 1, 1
    plans = input().split()
    # L,R,U,D
    dx = [0, 0, -1, 1]
    dy = [-1, 1, 0, 0]
    # 행동 타입은 좌우상하 밖에 없으니 미리 리스트로 만들어둠
    move_types = ['L', 'R', 'U', 'D']

    # 들어온 이동계획 for
    for plan in plans:
        # 행동 타입리스트의 크기만큼 for문 반복
        for i in range(len(move_types)):
            # 입력받은 이동계획과 행동 타입을 비교
            if plan == move_types[i]:
                """
                행동 타입 L 과 일치한다면, x 좌표(행)는 변화가 없고 y좌표(열)만 -1 되니
                x 좌표 (int)에다가 0을 더해주고, y좌표(열)을 -1 해줌.
                """
                nx = x + dx[i]
                ny = y + dy[i]
                # 공간을 벗어나는 좌표, 옮겨진 x,y가 1보다 작거나, 공간보다 넓을경우는 그냥 무시
                if nx < 1 or ny < 1 or nx > n or ny > 1:
                    continue
                x, y = nx, ny
    print(x,y)
updownleftright()